{"ast":null,"code":"import _defineProperty from \"/Users/charleswang/Desktop/coding learning/web/projects/project1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project1/src/client/component/newHome.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../redux/action-creator/actions\";\nimport MaterialTable from 'material-table';\n\nconst axios = require('axios');\n\nclass NewHome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columns: [{\n        title: 'FirstName',\n        field: 'firstName'\n      }, {\n        title: 'LastName',\n        field: 'lastName'\n      }, {\n        title: 'Age',\n        field: 'Age',\n        type: 'numeric'\n      }, {\n        title: 'Sex',\n        field: 'Sex'\n      }],\n      data: this.props.userList.data\n    };\n  }\n\n  componentDidMount() {\n    this.props.getList();\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(MaterialTable, {\n      title: \"UserList\",\n      columns: this.state.columns,\n      data: this.props.userList.data,\n      editable: {\n        onRowAdd: () => {\n          this.props.history.push(\"/create\");\n        },\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n\n            if (oldData) {\n              this.setState(prevState => {\n                const data = [...prevState.data];\n                data[data.indexOf(oldData)] = newData;\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            this.setState(prevState => {\n              const data = [...prevState.data];\n              data.splice(data.indexOf(oldData), 1);\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    userList: state.userListReducer,\n    user: state.userReducer\n  };\n};\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    getListAndjump: url => {\n      dispatch(actions.getListAndjump(url));\n    },\n    getList: () => {\n      dispatch(actions.getList());\n    },\n    getUser: id => {\n      dispatch(actions.getOneUser(id));\n    },\n    deleteOneUser: id => {\n      dispatch(actions.deleteOneUser(id));\n    },\n    createOneUser: user => {\n      dispatch(actions.createOneUser(user));\n    },\n    updateOneUser: (id, user) => {\n      dispatch(actions.updateOneUser(id, user));\n    },\n    sort: (field, AorD) => {\n      dispatch(actions.sort(field, AorD));\n    },\n    search: text => {\n      dispatch(actions.search(text));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(NewHome);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project1/src/client/component/newHome.js"],"names":["React","connect","actions","MaterialTable","axios","require","NewHome","Component","constructor","props","state","columns","title","field","type","data","userList","componentDidMount","getList","render","console","log","onRowAdd","history","push","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","setState","prevState","indexOf","onRowDelete","splice","mapStatetoProps","userListReducer","user","userReducer","mapDispatchtoProps","dispatch","getListAndjump","url","getUser","id","getOneUser","deleteOneUser","createOneUser","updateOneUser","sort","AorD","search","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport * as actions from \"../redux/action-creator/actions\";\nimport MaterialTable from 'material-table';\n\nconst axios = require('axios');\nclass NewHome extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {columns: [\n      { title: 'FirstName', field: 'firstName' },\n      { title: 'LastName', field: 'lastName' },\n      { title: 'Age', field: 'Age', type: 'numeric' },\n      { title: 'Sex', field: 'Sex' },\n    ],  data: this.props.userList.data}\n  }\n  componentDidMount() {\n    this.props.getList();\n  }\n  render() {\n    console.log(this.props);\n    return (\n      \n      <MaterialTable\n        title=\"UserList\"\n        columns={this.state.columns}\n        data={this.props.userList.data}\n        editable={{\n          onRowAdd: () => {\n            this.props.history.push(\"/create\");\n          },\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  this.setState(prevState => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                this.setState(prevState => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n        }}\n      />\n    );\n  }\n}\nconst mapStatetoProps = (state) => {\n  return {\n    userList: state.userListReducer,\n    user: state.userReducer\n  }\n}\nconst mapDispatchtoProps = (dispatch) => {\n  return {\n    getListAndjump: (url) => {\n      dispatch(actions.getListAndjump(url));\n    },\n    getList: () => {\n      dispatch(actions.getList());\n    },\n    getUser: (id) => {\n      dispatch(actions.getOneUser(id));\n    },\n    deleteOneUser: (id) => {\n      dispatch(actions.deleteOneUser(id));\n    },\n    createOneUser: (user) => {\n      dispatch(actions.createOneUser(user));\n    },\n    updateOneUser: (id, user) => {\n      dispatch(actions.updateOneUser(id, user));\n    },\n    sort: (field, AorD) => {\n      dispatch(actions.sort(field, AorD));\n    },\n    search: (text) => {\n      dispatch(actions.search(text));\n    }\n  }\n}\nexport default connect(mapStatetoProps,mapDispatchtoProps)(NewHome);"]},"metadata":{},"sourceType":"module"}