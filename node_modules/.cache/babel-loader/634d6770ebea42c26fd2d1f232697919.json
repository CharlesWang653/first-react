{"ast":null,"code":"import userListReducer from \"../reducer/userList\";\nimport userReducer from \"../reducer/user\";\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport { createBrowserHistory } from 'history';\nconst reducers = combineReducers({\n  userListReducer,\n  userReducer\n});\nconst store = createStore(connectRouter(history)(reducers), // 使用connectRouter包裹 root reducer 并且提供我们创建的history对象，获得新的 root reducer\ninitialState, applyMiddleware(thunk, routerMiddleware(history)) // 使用routerMiddleware(history)实现使用 dispatch history actions，这样就可以使用push('/path/to/somewhere')去改变路由（这里的 push 是来自 connected-react-router 的）\n);\nexport default store;","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project1/src/client/redux/store/store.js"],"names":["userListReducer","userReducer","thunk","createStore","applyMiddleware","combineReducers","createBrowserHistory","reducers","store","connectRouter","history","initialState","routerMiddleware"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,qBAA5B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,MAAMC,QAAQ,GAAGF,eAAe,CAAC;AAC/BL,EAAAA,eAD+B;AACdC,EAAAA;AADc,CAAD,CAAhC;AAMA,MAAMO,KAAK,GAAGL,WAAW,CACvBM,aAAa,CAACC,OAAD,CAAb,CAAuBH,QAAvB,CADuB,EACW;AAClCI,YAFuB,EAGvBP,eAAe,CAACF,KAAD,EAAQU,gBAAgB,CAACF,OAAD,CAAxB,CAHQ,CAG2B;AAH3B,CAAzB;AAKA,eAAeF,KAAf","sourcesContent":["import userListReducer from \"../reducer/userList\";\nimport userReducer from \"../reducer/user\";\nimport thunk from 'redux-thunk';\nimport {createStore, applyMiddleware} from \"redux\";\nimport {combineReducers} from \"redux\";\nimport { createBrowserHistory } from 'history'\nconst reducers = combineReducers({\n  userListReducer, userReducer\n})\n\n\n \nconst store = createStore(\n  connectRouter(history)(reducers), // 使用connectRouter包裹 root reducer 并且提供我们创建的history对象，获得新的 root reducer\n  initialState,\n  applyMiddleware(thunk, routerMiddleware(history)) // 使用routerMiddleware(history)实现使用 dispatch history actions，这样就可以使用push('/path/to/somewhere')去改变路由（这里的 push 是来自 connected-react-router 的）\n )\nexport default store;"]},"metadata":{},"sourceType":"module"}