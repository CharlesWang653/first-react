{"ast":null,"code":"import _defineProperty from \"/Users/charleswang/Desktop/coding learning/web/projects/project1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { sortFirstName } from \"../action-creator/actions\";\nconst initState = {\n  data: [],\n  isLoading: false,\n  err: \"\"\n};\n\nconst sort = (type, data) => {\n  switch (type.filed) {\n    case \"FirstName\":\n      let newArr = [...data];\n      newArr.sort((a, b) => {\n        return a.firstName > b.firstName ? 1 : -1;\n      });\n      return newArr;\n  }\n};\n\nconst userListReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"GET_LIST_START\":\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case \"GET_LIST_SUCCESS\":\n      return _objectSpread({}, state, {\n        isLoading: false,\n        data: action.data\n      });\n\n    case \"GET_LIST_FAIL\":\n      return _objectSpread({}, state, {\n        isLoading: false,\n        err: action.err\n      });\n\n    case \"SORT\":\n      let arr = sort(action.WhichAndHow, state.data);\n      return _objectSpread({}, state, {\n        data: arr\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userListReducer;","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project1/src/client/redux/reducer/userList.js"],"names":["sortFirstName","initState","data","isLoading","err","sort","type","filed","newArr","a","b","firstName","userListReducer","state","action","arr","WhichAndHow"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,2BAA9B;AAEA,MAAMC,SAAS,GAAG;AAACC,EAAAA,IAAI,EAAC,EAAN;AAAUC,EAAAA,SAAS,EAAC,KAApB;AAA2BC,EAAAA,GAAG,EAAC;AAA/B,CAAlB;;AACA,MAAMC,IAAI,GAAG,CAACC,IAAD,EAAOJ,IAAP,KAAgB;AAC3B,UAAOI,IAAI,CAACC,KAAZ;AACE,SAAK,WAAL;AACE,UAAIC,MAAM,GAAG,CAAC,GAAGN,IAAJ,CAAb;AACAM,MAAAA,MAAM,CAACH,IAAP,CAAY,CAACI,CAAD,EAAIC,CAAJ,KAAU;AACpB,eAAOD,CAAC,CAACE,SAAF,GAAcD,CAAC,CAACC,SAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAAxC;AACD,OAFD;AAGA,aAAOH,MAAP;AANJ;AAQD,CATD;;AAUA,MAAMI,eAAe,GAAG,CAACC,KAAK,GAAGZ,SAAT,EAAoBa,MAApB,KAA+B;AACrD,UAAOA,MAAM,CAACR,IAAd;AACE,SAAK,gBAAL;AACE,+BACKO,KADL;AAEEV,QAAAA,SAAS,EAAE;AAFb;;AAIF,SAAK,kBAAL;AACE,+BACKU,KADL;AAEEV,QAAAA,SAAS,EAAE,KAFb;AAGED,QAAAA,IAAI,EAAEY,MAAM,CAACZ;AAHf;;AAKF,SAAK,eAAL;AACE,+BACKW,KADL;AAEEV,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,GAAG,EAAEU,MAAM,CAACV;AAHd;;AAKF,SAAK,MAAL;AACE,UAAIW,GAAG,GAAGV,IAAI,CAACS,MAAM,CAACE,WAAR,EAAqBH,KAAK,CAACX,IAA3B,CAAd;AACA,+BACKW,KADL;AAEEX,QAAAA,IAAI,EAAEa;AAFR;;AAIF;AACE,aAAOF,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,eAAf","sourcesContent":["import { sortFirstName } from \"../action-creator/actions\";\n\nconst initState = {data:[], isLoading:false, err:\"\"};\nconst sort = (type, data) => {\n  switch(type.filed){\n    case \"FirstName\": \n      let newArr = [...data];\n      newArr.sort((a, b) => {\n        return a.firstName > b.firstName ? 1 : -1;\n      });\n      return newArr;\n  }\n}\nconst userListReducer = (state = initState, action) => {\n  switch(action.type){\n    case \"GET_LIST_START\":\n      return {\n        ...state,\n        isLoading: true\n      }\n    case \"GET_LIST_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        data: action.data\n      }\n    case \"GET_LIST_FAIL\":\n      return {\n        ...state,\n        isLoading: false,\n        err: action.err\n      }\n    case \"SORT\":\n      let arr = sort(action.WhichAndHow, state.data);\n      return {\n        ...state,\n        data: arr\n      }\n    default:\n      return state;\n  }\n}\n\nexport default userListReducer;"]},"metadata":{},"sourceType":"module"}