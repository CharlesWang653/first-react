{"ast":null,"code":"var _jsxFileName = \"/Users/charleswang/Desktop/coding learning/web/projects/project1/src/client/component/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport * as actions from \"../redux/action-creator/actions\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.props.getList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.props.createOneUser(this.state.user),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStatetoProps = state => {\n  return {\n    userList: state.userListReducer,\n    user: state.userReducer\n  };\n};\n\nconst mapDispatchtoProps = dispatch => {\n  return {\n    getList: () => {\n      dispatch(actions.getList());\n    },\n    getUser: id => {\n      dispatch(actions.getOneUser(id));\n    },\n    deleteOneUser: id => {\n      dispatch(actions.deleteOneUser(id));\n    },\n    createOneUser: user => {\n      dispatch(actions.createOneUser(user));\n    },\n    updateOneUser: (id, user) => {\n      dispatch(actions.updateOneUser(id, user));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(App);","map":{"version":3,"sources":["/Users/charleswang/Desktop/coding learning/web/projects/project1/src/client/component/index.js"],"names":["React","connect","BrowserRouter","Route","Link","Switch","actions","App","Component","constructor","props","state","render","console","log","getList","createOneUser","user","mapStatetoProps","userList","userListReducer","userReducer","mapDispatchtoProps","dispatch","getUser","id","getOneUser","deleteOneUser","updateOneUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAiD,kBAAjD;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;;AACA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AACDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,KAAL,CAAWK,OAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKL,KAAL,CAAWM,aAAX,CAAyB,KAAKL,KAAL,CAAWM,IAApC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AAd+B;;AAgBlC,MAAMC,eAAe,GAAIP,KAAD,IAAW;AACjC,SAAO;AACLQ,IAAAA,QAAQ,EAAER,KAAK,CAACS,eADX;AAELH,IAAAA,IAAI,EAAEN,KAAK,CAACU;AAFP,GAAP;AAID,CALD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLR,IAAAA,OAAO,EAAE,MAAM;AACbQ,MAAAA,QAAQ,CAACjB,OAAO,CAACS,OAAR,EAAD,CAAR;AACD,KAHI;AAILS,IAAAA,OAAO,EAAGC,EAAD,IAAQ;AACfF,MAAAA,QAAQ,CAACjB,OAAO,CAACoB,UAAR,CAAmBD,EAAnB,CAAD,CAAR;AACD,KANI;AAOLE,IAAAA,aAAa,EAAGF,EAAD,IAAQ;AACrBF,MAAAA,QAAQ,CAACjB,OAAO,CAACqB,aAAR,CAAsBF,EAAtB,CAAD,CAAR;AACD,KATI;AAULT,IAAAA,aAAa,EAAGC,IAAD,IAAU;AACvBM,MAAAA,QAAQ,CAACjB,OAAO,CAACU,aAAR,CAAsBC,IAAtB,CAAD,CAAR;AACD,KAZI;AAaLW,IAAAA,aAAa,EAAE,CAACH,EAAD,EAAKR,IAAL,KAAc;AAC3BM,MAAAA,QAAQ,CAACjB,OAAO,CAACsB,aAAR,CAAsBH,EAAtB,EAA0BR,IAA1B,CAAD,CAAR;AACD;AAfI,GAAP;AAiBD,CAlBD;;AAmBA,eAAehB,OAAO,CAACiB,eAAD,EAAiBI,kBAAjB,CAAP,CAA4Cf,GAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\"\nimport {BrowserRouter, Route, Link, Switch} from \"react-router-dom\";\nimport * as actions from \"../redux/action-creator/actions\"\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <button onClick={() => this.props.getList()}></button>\n        <button onClick={() => this.props.createOneUser(this.state.user)}></button>\n        \n      </div>\n    );\n  }\n}\nconst mapStatetoProps = (state) => {\n  return {\n    userList: state.userListReducer,\n    user: state.userReducer\n  }\n}\nconst mapDispatchtoProps = (dispatch) => {\n  return {\n    getList: () => {\n      dispatch(actions.getList());\n    },\n    getUser: (id) => {\n      dispatch(actions.getOneUser(id));\n    },\n    deleteOneUser: (id) => {\n      dispatch(actions.deleteOneUser(id));\n    },\n    createOneUser: (user) => {\n      dispatch(actions.createOneUser(user));\n    },\n    updateOneUser: (id, user) => {\n      dispatch(actions.updateOneUser(id, user));\n    }\n  }\n}\nexport default connect(mapStatetoProps,mapDispatchtoProps)(App);"]},"metadata":{},"sourceType":"module"}